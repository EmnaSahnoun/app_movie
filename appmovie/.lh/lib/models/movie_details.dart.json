{
    "sourceFile": "lib/models/movie_details.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1732911723006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732911742389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,81 +1,22 @@\n-class MovieDetails {\r\n+class Movie {\r\n   final int id;\r\n   final String title;\r\n-  final String? overview;\r\n-  final String? posterPath;\r\n-  final String? backdropPath;\r\n-  final double? voteAverage;\r\n-  final int? voteCount;\r\n-  final String? releaseDate;\r\n-  final int? runtime;\r\n-  final int? budget;\r\n-  final int? revenue;\r\n-  final List<Genre> genres;\r\n+  final String overview;\r\n+  final String posterPath;\r\n \r\n-  MovieDetails({\r\n+  Movie({\r\n     required this.id,\r\n     required this.title,\r\n-    this.overview,\r\n-    this.posterPath,\r\n-    this.backdropPath,\r\n-    this.voteAverage,\r\n-    this.voteCount,\r\n-    this.releaseDate,\r\n-    this.runtime,\r\n-    this.budget,\r\n-    this.revenue,\r\n-    required this.genres,\r\n+    required this.overview,\r\n+    required this.posterPath,\r\n   });\r\n \r\n-  factory MovieDetails.fromJson(Map<String, dynamic> json) {\r\n-    return MovieDetails(\r\n-      id: json['id'] as int,\r\n-      title: json['title'] as String,\r\n-      overview: json['overview'] as String?,\r\n-      posterPath: json['poster_path'] as String?,\r\n-      backdropPath: json['backdrop_path'] as String?,\r\n-      voteAverage: (json['vote_average'] as num?)?.toDouble(),\r\n-      voteCount: json['vote_count'] as int?,\r\n-      releaseDate: json['release_date'] as String?,\r\n-      runtime: json['runtime'] as int?,\r\n-      budget: json['budget'] as int?,\r\n-      revenue: json['revenue'] as int?,\r\n-      genres: (json['genres'] as List)\r\n-          .map((genre) => Genre.fromJson(genre))\r\n-          .toList(),\r\n+  factory Movie.fromJson(Map<String, dynamic> json) {\r\n+    return Movie(\r\n+      id: json['id'],\r\n+      title: json['title'] ?? 'No Title',\r\n+      overview: json['overview'] ?? 'No Description',\r\n+      posterPath: json['poster_path'] ?? '',\r\n     );\r\n   }\r\n-\r\n-  String getPosterUrl() {\r\n-    return posterPath != null\r\n-        ? 'https://image.tmdb.org/t/p/w500$posterPath'\r\n-        : 'https://via.placeholder.com/500x750?text=No+Image';\r\n-  }\r\n-\r\n-  String getBackdropUrl() {\r\n-    return backdropPath != null\r\n-        ? 'https://image.tmdb.org/t/p/w780$backdropPath'\r\n-        : 'https://via.placeholder.com/780x439?text=No+Image';\r\n-  }\r\n-\r\n-  String getFormattedRuntime() {\r\n-    if (runtime == null) return 'Unknown';\r\n-    final hours = runtime! ~/ 60;\r\n-    final minutes = runtime! % 60;\r\n-    return '${hours}h ${minutes}m';\r\n-  }\r\n }\r\n-\r\n-class Genre {\r\n-  final int id;\r\n-  final String name;\r\n-\r\n-  Genre({required this.id, required this.name});\r\n-\r\n-  factory Genre.fromJson(Map<String, dynamic> json) {\r\n-    return Genre(\r\n-      id: json['id'] as int,\r\n-      name: json['name'] as String,\r\n-    );\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1732911798700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,1 @@\n-class Movie {\r\n-  final int id;\r\n-  final String title;\r\n-  final String overview;\r\n-  final String posterPath;\r\n-\r\n-  Movie({\r\n-    required this.id,\r\n-    required this.title,\r\n-    required this.overview,\r\n-    required this.posterPath,\r\n-  });\r\n-\r\n-  factory Movie.fromJson(Map<String, dynamic> json) {\r\n-    return Movie(\r\n-      id: json['id'],\r\n-      title: json['title'] ?? 'No Title',\r\n-      overview: json['overview'] ?? 'No Description',\r\n-      posterPath: json['poster_path'] ?? '',\r\n-    );\r\n-  }\r\n-}\r\n+movie_details\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732911806984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,81 @@\n-movie_details\n\\ No newline at end of file\n+class MovieDetails {\r\n+  final int id;\r\n+  final String title;\r\n+  final String? overview;\r\n+  final String? posterPath;\r\n+  final String? backdropPath;\r\n+  final double? voteAverage;\r\n+  final int? voteCount;\r\n+  final String? releaseDate;\r\n+  final int? runtime;\r\n+  final int? budget;\r\n+  final int? revenue;\r\n+  final List<Genre> genres;\r\n+\r\n+  MovieDetails({\r\n+    required this.id,\r\n+    required this.title,\r\n+    this.overview,\r\n+    this.posterPath,\r\n+    this.backdropPath,\r\n+    this.voteAverage,\r\n+    this.voteCount,\r\n+    this.releaseDate,\r\n+    this.runtime,\r\n+    this.budget,\r\n+    this.revenue,\r\n+    required this.genres,\r\n+  });\r\n+\r\n+  factory MovieDetails.fromJson(Map<String, dynamic> json) {\r\n+    return MovieDetails(\r\n+      id: json['id'] as int,\r\n+      title: json['title'] as String,\r\n+      overview: json['overview'] as String?,\r\n+      posterPath: json['poster_path'] as String?,\r\n+      backdropPath: json['backdrop_path'] as String?,\r\n+      voteAverage: (json['vote_average'] as num?)?.toDouble(),\r\n+      voteCount: json['vote_count'] as int?,\r\n+      releaseDate: json['release_date'] as String?,\r\n+      runtime: json['runtime'] as int?,\r\n+      budget: json['budget'] as int?,\r\n+      revenue: json['revenue'] as int?,\r\n+      genres: (json['genres'] as List)\r\n+          .map((genre) => Genre.fromJson(genre))\r\n+          .toList(),\r\n+    );\r\n+  }\r\n+\r\n+  String getPosterUrl() {\r\n+    return posterPath != null\r\n+        ? 'https://image.tmdb.org/t/p/w500$posterPath'\r\n+        : 'https://via.placeholder.com/500x750?text=No+Image';\r\n+  }\r\n+\r\n+  String getBackdropUrl() {\r\n+    return backdropPath != null\r\n+        ? 'https://image.tmdb.org/t/p/w780$backdropPath'\r\n+        : 'https://via.placeholder.com/780x439?text=No+Image';\r\n+  }\r\n+\r\n+  String getFormattedRuntime() {\r\n+    if (runtime == null) return 'Unknown';\r\n+    final hours = runtime! ~/ 60;\r\n+    final minutes = runtime! % 60;\r\n+    return '${hours}h ${minutes}m';\r\n+  }\r\n+}\r\n+\r\n+class Genre {\r\n+  final int id;\r\n+  final String name;\r\n+\r\n+  Genre({required this.id, required this.name});\r\n+\r\n+  factory Genre.fromJson(Map<String, dynamic> json) {\r\n+    return Genre(\r\n+      id: json['id'] as int,\r\n+      name: json['name'] as String,\r\n+    );\r\n+  }\r\n+}\r\n"
                }
            ],
            "date": 1732911723006,
            "name": "Commit-0",
            "content": "class MovieDetails {\r\n  final int id;\r\n  final String title;\r\n  final String? overview;\r\n  final String? posterPath;\r\n  final String? backdropPath;\r\n  final double? voteAverage;\r\n  final int? voteCount;\r\n  final String? releaseDate;\r\n  final int? runtime;\r\n  final int? budget;\r\n  final int? revenue;\r\n  final List<Genre> genres;\r\n\r\n  MovieDetails({\r\n    required this.id,\r\n    required this.title,\r\n    this.overview,\r\n    this.posterPath,\r\n    this.backdropPath,\r\n    this.voteAverage,\r\n    this.voteCount,\r\n    this.releaseDate,\r\n    this.runtime,\r\n    this.budget,\r\n    this.revenue,\r\n    required this.genres,\r\n  });\r\n\r\n  factory MovieDetails.fromJson(Map<String, dynamic> json) {\r\n    return MovieDetails(\r\n      id: json['id'] as int,\r\n      title: json['title'] as String,\r\n      overview: json['overview'] as String?,\r\n      posterPath: json['poster_path'] as String?,\r\n      backdropPath: json['backdrop_path'] as String?,\r\n      voteAverage: (json['vote_average'] as num?)?.toDouble(),\r\n      voteCount: json['vote_count'] as int?,\r\n      releaseDate: json['release_date'] as String?,\r\n      runtime: json['runtime'] as int?,\r\n      budget: json['budget'] as int?,\r\n      revenue: json['revenue'] as int?,\r\n      genres: (json['genres'] as List)\r\n          .map((genre) => Genre.fromJson(genre))\r\n          .toList(),\r\n    );\r\n  }\r\n\r\n  String getPosterUrl() {\r\n    return posterPath != null\r\n        ? 'https://image.tmdb.org/t/p/w500$posterPath'\r\n        : 'https://via.placeholder.com/500x750?text=No+Image';\r\n  }\r\n\r\n  String getBackdropUrl() {\r\n    return backdropPath != null\r\n        ? 'https://image.tmdb.org/t/p/w780$backdropPath'\r\n        : 'https://via.placeholder.com/780x439?text=No+Image';\r\n  }\r\n\r\n  String getFormattedRuntime() {\r\n    if (runtime == null) return 'Unknown';\r\n    final hours = runtime! ~/ 60;\r\n    final minutes = runtime! % 60;\r\n    return '${hours}h ${minutes}m';\r\n  }\r\n}\r\n\r\nclass Genre {\r\n  final int id;\r\n  final String name;\r\n\r\n  Genre({required this.id, required this.name});\r\n\r\n  factory Genre.fromJson(Map<String, dynamic> json) {\r\n    return Genre(\r\n      id: json['id'] as int,\r\n      name: json['name'] as String,\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}