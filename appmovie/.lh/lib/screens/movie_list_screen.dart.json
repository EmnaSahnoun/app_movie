{
    "sourceFile": "lib/screens/movie_list_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1732912127291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732913562977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,104 @@\n import 'package:flutter/material.dart';\r\n+import '../models/movie_preview.dart';\r\n+import '../services/movie_service.dart';\r\n+import 'movie_details_screen.dart';\r\n \r\n-class MovieListScreen extends StatelessWidget {\r\n+class MovieListScreen extends StatefulWidget {\r\n   @override\r\n+  _MovieListScreenState createState() => _MovieListScreenState();\r\n+}\r\n+\r\n+class _MovieListScreenState extends State<MovieListScreen> {\r\n+  final MovieService _movieService = MovieService();\r\n+  late Future<List<MoviePreview>> _moviesFuture;\r\n+\r\n+  @override\r\n+  void initState() {\r\n+    super.initState();\r\n+    _moviesFuture = _movieService.fetchMovies('popular'); // Type: 'popular', 'now_playing', etc.\r\n+  }\r\n+\r\n+  @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n-        title: Text('Movies List'),\r\n+        title: Text('Popular Movies'),\r\n       ),\r\n-      body: Center(\r\n-        child: Text('List of Movies will be displayed here.'),\r\n+      body: FutureBuilder<List<MoviePreview>>(\r\n+        future: _moviesFuture,\r\n+        builder: (context, snapshot) {\r\n+          if (snapshot.connectionState == ConnectionState.waiting) {\r\n+            return Center(child: CircularProgressIndicator());\r\n+          } else if (snapshot.hasError) {\r\n+            return Center(child: Text('Error: ${snapshot.error}'));\r\n+          } else if (!snapshot.hasData || snapshot.data!.isEmpty) {\r\n+            return Center(child: Text('No movies found.'));\r\n+          } else {\r\n+            final movies = snapshot.data!;\r\n+            return GridView.builder(\r\n+              padding: const EdgeInsets.all(8.0),\r\n+              gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\r\n+                crossAxisCount: 2,\r\n+                childAspectRatio: 0.7,\r\n+                crossAxisSpacing: 8.0,\r\n+                mainAxisSpacing: 8.0,\r\n+              ),\r\n+              itemCount: movies.length,\r\n+              itemBuilder: (context, index) {\r\n+                final movie = movies[index];\r\n+                return GestureDetector(\r\n+                  onTap: () {\r\n+                    Navigator.push(\r\n+                      context,\r\n+                      MaterialPageRoute(\r\n+                        builder: (context) => MovieDetailsScreen(movieId: movie.id),\r\n+                      ),\r\n+                    );\r\n+                  },\r\n+                  child: MovieCard(movie: movie),\r\n+                );\r\n+              },\r\n+            );\r\n+          }\r\n+        },\r\n       ),\r\n     );\r\n   }\r\n }\r\n+\r\n+class MovieCard extends StatelessWidget {\r\n+  final MoviePreview movie;\r\n+\r\n+  MovieCard({required this.movie});\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Card(\r\n+      clipBehavior: Clip.antiAlias,\r\n+      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\r\n+      child: Column(\r\n+        crossAxisAlignment: CrossAxisAlignment.stretch,\r\n+        children: [\r\n+          Expanded(\r\n+            child: Image.network(\r\n+              movie.getPosterUrl(),\r\n+              fit: BoxFit.cover,\r\n+              errorBuilder: (context, error, stackTrace) {\r\n+                return Center(child: Icon(Icons.broken_image, size: 50));\r\n+              },\r\n+            ),\r\n+          ),\r\n+          Padding(\r\n+            padding: const EdgeInsets.all(8.0),\r\n+            child: Text(\r\n+              movie.title,\r\n+              style: TextStyle(fontWeight: FontWeight.bold),\r\n+              maxLines: 2,\r\n+              overflow: TextOverflow.ellipsis,\r\n+            ),\r\n+          ),\r\n+        ],\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1732913570778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,104 +1,15 @@\n import 'package:flutter/material.dart';\r\n-import '../models/movie_preview.dart';\r\n-import '../services/movie_service.dart';\r\n-import 'movie_details_screen.dart';\r\n \r\n-class MovieListScreen extends StatefulWidget {\r\n+class MovieListScreen extends StatelessWidget {\r\n   @override\r\n-  _MovieListScreenState createState() => _MovieListScreenState();\r\n-}\r\n-\r\n-class _MovieListScreenState extends State<MovieListScreen> {\r\n-  final MovieService _movieService = MovieService();\r\n-  late Future<List<MoviePreview>> _moviesFuture;\r\n-\r\n-  @override\r\n-  void initState() {\r\n-    super.initState();\r\n-    _moviesFuture = _movieService.fetchMovies('popular'); // Type: 'popular', 'now_playing', etc.\r\n-  }\r\n-\r\n-  @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n-        title: Text('Popular Movies'),\r\n+        title: Text('Movies List'),\r\n       ),\r\n-      body: FutureBuilder<List<MoviePreview>>(\r\n-        future: _moviesFuture,\r\n-        builder: (context, snapshot) {\r\n-          if (snapshot.connectionState == ConnectionState.waiting) {\r\n-            return Center(child: CircularProgressIndicator());\r\n-          } else if (snapshot.hasError) {\r\n-            return Center(child: Text('Error: ${snapshot.error}'));\r\n-          } else if (!snapshot.hasData || snapshot.data!.isEmpty) {\r\n-            return Center(child: Text('No movies found.'));\r\n-          } else {\r\n-            final movies = snapshot.data!;\r\n-            return GridView.builder(\r\n-              padding: const EdgeInsets.all(8.0),\r\n-              gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\r\n-                crossAxisCount: 2,\r\n-                childAspectRatio: 0.7,\r\n-                crossAxisSpacing: 8.0,\r\n-                mainAxisSpacing: 8.0,\r\n-              ),\r\n-              itemCount: movies.length,\r\n-              itemBuilder: (context, index) {\r\n-                final movie = movies[index];\r\n-                return GestureDetector(\r\n-                  onTap: () {\r\n-                    Navigator.push(\r\n-                      context,\r\n-                      MaterialPageRoute(\r\n-                        builder: (context) => MovieDetailsScreen(movieId: movie.id),\r\n-                      ),\r\n-                    );\r\n-                  },\r\n-                  child: MovieCard(movie: movie),\r\n-                );\r\n-              },\r\n-            );\r\n-          }\r\n-        },\r\n+      body: Center(\r\n+        child: Text('List of Movies will be displayed here.'),\r\n       ),\r\n     );\r\n   }\r\n }\r\n-\r\n-class MovieCard extends StatelessWidget {\r\n-  final MoviePreview movie;\r\n-\r\n-  MovieCard({required this.movie});\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return Card(\r\n-      clipBehavior: Clip.antiAlias,\r\n-      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\r\n-      child: Column(\r\n-        crossAxisAlignment: CrossAxisAlignment.stretch,\r\n-        children: [\r\n-          Expanded(\r\n-            child: Image.network(\r\n-              movie.getPosterUrl(),\r\n-              fit: BoxFit.cover,\r\n-              errorBuilder: (context, error, stackTrace) {\r\n-                return Center(child: Icon(Icons.broken_image, size: 50));\r\n-              },\r\n-            ),\r\n-          ),\r\n-          Padding(\r\n-            padding: const EdgeInsets.all(8.0),\r\n-            child: Text(\r\n-              movie.title,\r\n-              style: TextStyle(fontWeight: FontWeight.bold),\r\n-              maxLines: 2,\r\n-              overflow: TextOverflow.ellipsis,\r\n-            ),\r\n-          ),\r\n-        ],\r\n-      ),\r\n-    );\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1732913586040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import 'package:flutter/material.dart';\r\n \r\n-class MovieListScreen extends StatelessWidget {\r\n+class MovieListScreen extends StatefulWidget  {\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n"
                },
                {
                    "date": 1732913598226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,101 @@\n import 'package:flutter/material.dart';\r\n \r\n class MovieListScreen extends StatefulWidget  {\r\n+ @override\r\n+  _MovieListScreenState createState() => _MovieListScreenState();\r\n+}\r\n+\r\n+class _MovieListScreenState extends State<MovieListScreen> {\r\n+  final MovieService _movieService = MovieService();\r\n+  late Future<List<MoviePreview>> _moviesFuture;\r\n+\r\n   @override\r\n+  void initState() {\r\n+    super.initState();\r\n+    _moviesFuture = _movieService.fetchMovies('popular'); // Type: 'popular', 'now_playing', etc.\r\n+  }\r\n+\r\n+  @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n-        title: Text('Movies List'),\r\n+        title: Text('Popular Movies'),\r\n       ),\r\n-      body: Center(\r\n-        child: Text('List of Movies will be displayed here.'),\r\n+      body: FutureBuilder<List<MoviePreview>>(\r\n+        future: _moviesFuture,\r\n+        builder: (context, snapshot) {\r\n+          if (snapshot.connectionState == ConnectionState.waiting) {\r\n+            return Center(child: CircularProgressIndicator());\r\n+          } else if (snapshot.hasError) {\r\n+            return Center(child: Text('Error: ${snapshot.error}'));\r\n+          } else if (!snapshot.hasData || snapshot.data!.isEmpty) {\r\n+            return Center(child: Text('No movies found.'));\r\n+          } else {\r\n+            final movies = snapshot.data!;\r\n+            return GridView.builder(\r\n+              padding: const EdgeInsets.all(8.0),\r\n+              gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\r\n+                crossAxisCount: 2,\r\n+                childAspectRatio: 0.7,\r\n+                crossAxisSpacing: 8.0,\r\n+                mainAxisSpacing: 8.0,\r\n+              ),\r\n+              itemCount: movies.length,\r\n+              itemBuilder: (context, index) {\r\n+                final movie = movies[index];\r\n+                return GestureDetector(\r\n+                  onTap: () {\r\n+                    Navigator.push(\r\n+                      context,\r\n+                      MaterialPageRoute(\r\n+                        builder: (context) => MovieDetailsScreen(movieId: movie.id),\r\n+                      ),\r\n+                    );\r\n+                  },\r\n+                  child: MovieCard(movie: movie),\r\n+                );\r\n+              },\r\n+            );\r\n+          }\r\n+        },\r\n       ),\r\n     );\r\n   }\r\n }\r\n+\r\n+class MovieCard extends StatelessWidget {\r\n+  final MoviePreview movie;\r\n+\r\n+  MovieCard({required this.movie});\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Card(\r\n+      clipBehavior: Clip.antiAlias,\r\n+      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\r\n+      child: Column(\r\n+        crossAxisAlignment: CrossAxisAlignment.stretch,\r\n+        children: [\r\n+          Expanded(\r\n+            child: Image.network(\r\n+              movie.getPosterUrl(),\r\n+              fit: BoxFit.cover,\r\n+              errorBuilder: (context, error, stackTrace) {\r\n+                return Center(child: Icon(Icons.broken_image, size: 50));\r\n+              },\r\n+            ),\r\n+          ),\r\n+          Padding(\r\n+            padding: const EdgeInsets.all(8.0),\r\n+            child: Text(\r\n+              movie.title,\r\n+              style: TextStyle(fontWeight: FontWeight.bold),\r\n+              maxLines: 2,\r\n+              overflow: TextOverflow.ellipsis,\r\n+            ),\r\n+          ),\r\n+        ],\r\n+      ),\r\n+    );\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732913617549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import 'package:flutter/material.dart';\r\n-\r\n+import '../models/movie_preview.dart';\r\n+import '../services/movie_service.dart';\r\n+import 'movie_details_screen.dart';\r\n class MovieListScreen extends StatefulWidget  {\r\n  @override\r\n   _MovieListScreenState createState() => _MovieListScreenState();\r\n }\r\n"
                },
                {
                    "date": 1732913634795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                   onTap: () {\r\n                     Navigator.push(\r\n                       context,\r\n                       MaterialPageRoute(\r\n-                        builder: (context) => MovieDetailsScreen(movieId: movie.id),\r\n+                        builder: (context) => MovieDetailsScreen(id: movie.id),\r\n                       ),\r\n                     );\r\n                   },\r\n                   child: MovieCard(movie: movie),\r\n"
                }
            ],
            "date": 1732912127291,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\n\r\nclass MovieListScreen extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: Text('Movies List'),\r\n      ),\r\n      body: Center(\r\n        child: Text('List of Movies will be displayed here.'),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}